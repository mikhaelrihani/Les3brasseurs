{% extends 'base.html.twig' %}

{% block title %}ExplorerModal
{% endblock %}

{% block body %}
	<div class="container mt-5">
		<h1>Send MMS</h1>
		<form id="mmsForm">
			<div class="mb-3">
				<label for="phoneNumber" class="form-label">Phone Number</label>
				<input type="tel" class="form-control" id="phoneNumber" name="to" required>
			</div>
			<div class="mb-3">
				<label for="messageBody" class="form-label">Message</label>
				<textarea class="form-control" id="messageBody" name="body" rows="3" required></textarea>
			</div>
			<div class="mb-3">
				<label for="selectedFile" class="form-label">Selected File</label>
				<input type="text" class="form-control" id="selectedFile" name="file" readonly required>
			</div>
			<button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#fileModal">Choose File</button>
			<button type="button" class="btn btn-primary" id="sendMmsBtn">Send MMS</button>
		</form>
	</div>

	<!-- Modal -->
	<div class="modal fade" id="fileModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">Select a File</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="row">
						<div class="col-md-6">
							<h6>Local Files</h6>
							<input type="file" class="form-control" id="localFileInput">
						</div>
						<div class="col-md-6">
							<h6>External Files</h6>
							<div id="externalFile"></div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					<button type="button" class="btn btn-primary" id="selectFileBtn">Select</button>
				</div>
			</div>
		</div>
	</div>
	<input
	type="hidden" id="selectedFilePath" name="selectedFilePath">
	<!-- Bootstrap JS and dependencies -->
	<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>

	<script>
		document.addEventListener('DOMContentLoaded', async () => {
async function fetchAndPopulateFiles() {
const response = await fetch('/api/files/explorer');
const data = await response.json();
const fileExplorer = document.getElementById('externalFile');
console.log(data);

data.files.forEach(file => {
const fileElement = document.createElement('div');
fileElement.textContent = file.name;
fileElement.dataset.fileName = file.name;
fileElement.dataset.filePath = file.path;
fileElement.addEventListener('click', () => selectExternalFile(fileElement));
fileExplorer.appendChild(fileElement);
});
}

function selectExternalFile(fileElement) {
document.querySelectorAll('#externalFile div').forEach(div => div.classList.remove('selected'));
fileElement.classList.add('selected');
document.getElementById('localFileInput').value = ''; // Clear local file input selection
}

function handleFileSelection() {
const selectedExternalFile = document.querySelector('#externalFile div.selected');
const selectedLocalFile = document.getElementById('localFileInput').files[0];

if (selectedExternalFile) {
document.getElementById('selectedFile').value = selectedExternalFile.dataset.fileName;
document.getElementById('selectedFilePath').value = selectedExternalFile.dataset.filePath;
} else if (selectedLocalFile) {
document.getElementById('selectedFile').value = selectedLocalFile.name;
document.getElementById('selectedFilePath').value = '';
} else {
alert('Please select a file.');
return;
}

const modal = document.getElementById('fileModal');
const bootstrapModal = bootstrap.Modal.getInstance(modal);
bootstrapModal.hide();
}

async function handleMmsSending() {
const to = document.getElementById('phoneNumber').value;
const body = document.getElementById('messageBody').value;
const fileInput = document.getElementById('localFileInput').files[0];
const selectedExternalFile = document.querySelector('#externalFile div.selected');
const selectedLocalFile = fileInput ? fileInput : null;
const externalFileName = selectedExternalFile ? selectedExternalFile.dataset.fileName : null;
const externalFilePath = document.getElementById('selectedFilePath').value;

const selectedData = new FormData();
selectedData.append('to', to);
selectedData.append('body', body);

if (selectedLocalFile) {
selectedData.append('file', selectedLocalFile);
} else {
selectedData.append('fileName', externalFileName);
}

try {
const mmsResponse = await fetch('/api/notification/sendMms', {
method: 'POST',
body: selectedData
});

if (! mmsResponse.ok) {
throw new Error (`HTTP error! status: ${
mmsResponse.status
}`);
}

const responseJson = await mmsResponse.json();
console.log('MMS sent successfully:', responseJson);

// If external file, send a request to delete the file
if (externalFilePath) {
await fetch('/api/files/delete', {
method: 'POST',
headers: {
'Content-Type': 'application/json'
},
body: JSON.stringify(
{path: externalFilePath}
)
});
}
} catch (error) {
console.log('Error sending MMS:', error);
}
}

await fetchAndPopulateFiles();
document.getElementById('selectFileBtn').addEventListener('click', handleFileSelection);
document.getElementById('sendMmsBtn').addEventListener('click', handleMmsSending);
});
	</script>

	<style>
		#externalFile div {
			padding: 8px;
			cursor: pointer;
		}

		#externalFile div.selected {
			background-color: #007bff;
			color: white;
		}

		/* Additional styles to prevent modal-related CSS issues */
		.modal-backdrop {
			position: relative;
			z-index: 0;
		}
	</style>

{% endblock %}
